name: release-dry-run

on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: Select version to release (dry-mode)
        options:
          - major
          - minor
          - patch
          - auto
        default: auto
        required: true

env:
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            **/node_modules
            ~/.npm
            dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      
      - name: Set Node v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          registry-url: https://registry.npmjs.org/
          
      - name: Set NPM version
        run: npm i -g npm@8
        
      - name: Install dependencies
        run: npm ci
        
      - name: Generate dist
        run: npm run dist

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Use node modules cache
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            **/node_modules
            ~/.npm
            dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        
      - name: Run Eslint  
        run: npm run lint
        
  unit-test:
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Use node modules cache
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            **/node_modules
            ~/.npm
            dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          
      - name: Run Jest
        run: npm run test

  release:
    needs: [lint, unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set node v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          registry-url: https://registry.npmjs.org/

      - name: Set npm version
        run: npm i -g npm@8

      - name: Use node modules cache
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            **/node_modules
            ~/.npm
            dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        
      - name: Setup Git config
        run: |
          git config --global user.name 'Devo GitHub Action'
          git config --global user.email 'desa@devo.com'

      - name: Publish major (if applicable)
        if: ${{ github.event.inputs.version == 'major' }}
        run: npm run release:ci -- major --dry-run

      - name: Publish minor (if applicable)
        if: ${{ github.event.inputs.version == 'minor' }}
        run: npm run release:ci -- minor --dry-run

      - name: Publish patch (if applicable)
        if: ${{ github.event.inputs.version == 'patch' }}
        run: npm run release:ci -- patch --dry-run

      - name: Publish auto (if applicable)
        if: ${{ github.event.inputs.version == 'auto' }}
        run: npm run release:ci -- --dry-run